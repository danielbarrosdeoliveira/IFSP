//******************************************************
//Instituto Federal de São Paulo - Campus Sertãozinho
//Disciplina......: M3LPBD
//Programação de Computadores e Dispositivos Móveis
//Aluno...........: Daniel Barros de Oliveira
//******************************************************
package br.com.escola.view;

// importando a classe java.sql.* para utilizar nos comandos de conexão com o BD.
import java.sql.*;
// importando o Módulo conexão 
import br.com.escola.dal.ModuloConexao;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Disciplinas extends javax.swing.JFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form RemoverDiscilpina
     */
    public Disciplinas() {

        initComponents();
        preencheTabela();
    }

    private void preencheTabela() {
        try {
            conexao = ModuloConexao.conector();
            // System.out.println(conexao);

            // As linhas abaixo, servem para apoio na conexão com o Banco de Dados.
            if (conexao != null) {

                lblStatusBD.setText("Conectado");
                String buscar = "select * from disciplinas";
                rs = conexao.createStatement().executeQuery(buscar);

                // A linha abaixo, verifica se existem dados na tabela Disciplina no banco de dados
                if ((rs.next()) == false) {

                    JOptionPane.showMessageDialog(null, "Não Existema disciplinas Cadastradas.\nPara cadastrar uma nova disciplina, favor preencher os campos do formulário.\nEm seguida clicar no botão cadastrar!");
                } else {
                    rs = conexao.createStatement().executeQuery(buscar);

                    while (rs.next()) {

                        // As linhas abaixo, "pega" as informações do Banco de Dados
                        int ID = rs.getInt("id");
                        String nomeDisciplina = rs.getString("nome");
                        int cargaHoraria = rs.getInt("cargahoraria");
                        String curso = rs.getString("curso");
                        int vagas = rs.getInt("vagas");
                        String periodo = rs.getString("periodo");

                        // As linhas abaixo, insere as informações do Banco na tabela do java.
                        Vector vetor = new Vector();

                        vetor.add(ID);
                        vetor.add(nomeDisciplina);
                        vetor.add(cargaHoraria);
                        vetor.add(curso);
                        vetor.add(vagas);
                        vetor.add(periodo);

                        ((DefaultTableModel) tblDisciplinas.getModel()).addRow(vetor);
                    }
                }
            } else {
                lblStatusBD.setText("Não Conectado");
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lblStatusBD = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfCargaHoraria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfCurso = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfVagas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboPeriodo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        btnAlterar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisciplinas = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SGE - Disciplinas");

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sistema de Gerenciamento para Escolas - Disciplinas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 153));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Banco de Dados:");

        lblStatusBD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStatusBD.setForeground(new java.awt.Color(255, 255, 255));
        lblStatusBD.setText("Status");
        lblStatusBD.setToolTipText("Status da conexão com o Banco de Dados");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("* Campos Obrigatórios");
        jLabel3.setToolTipText("Informa os campos com preenchimento Obrigatório");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatusBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblStatusBD)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel1.setText("* Nome:");

        jtfNome.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jtfNome.setToolTipText("Nome da Disciplina");
        jtfNome.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel4.setText("Carga Horária:");

        jtfCargaHoraria.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jtfCargaHoraria.setToolTipText("Carga Horária");

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel5.setText("* Curso:");

        jtfCurso.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jtfCurso.setToolTipText("Curso que a disciplina pertence");

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel6.setText("Quantidade de Vagas:");

        jtfVagas.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jtfVagas.setToolTipText("Quantidade de Vagas");

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel7.setText("Período:");

        cboPeriodo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        cboPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matutino", "Diurno", "Vespertino", "Noturno" }));
        cboPeriodo.setToolTipText("Período do Curso");

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel10.setText("Horas");

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel9.setText("Código:");

        jtfCodigo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jtfCodigo.setToolTipText("Código da Disciplina");
        jtfCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtfCodigo.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNome)
                            .addComponent(jtfCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jtfCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboPeriodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfVagas, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cboPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("Altera a Disciplina Cadastrada");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSair.setText("Sair");
        btnSair.setToolTipText("Volta para a Tela Principal");
        btnSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        btnSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSairKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Exclui a Disciplina Cadastrada");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        tblDisciplinas.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        tblDisciplinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código da Disciplina", "Nome da Disciplina", "Carga Horária", "Curso", "Vagas", "Período"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDisciplinas.setToolTipText("Exibe as disciplinas cadastradas");
        tblDisciplinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisciplinasMouseClicked(evt);
            }
        });
        tblDisciplinas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDisciplinasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisciplinas);
        if (tblDisciplinas.getColumnModel().getColumnCount() > 0) {
            tblDisciplinas.getColumnModel().getColumn(0).setMinWidth(125);
            tblDisciplinas.getColumnModel().getColumn(0).setMaxWidth(125);
            tblDisciplinas.getColumnModel().getColumn(1).setMinWidth(150);
            tblDisciplinas.getColumnModel().getColumn(1).setMaxWidth(300);
            tblDisciplinas.getColumnModel().getColumn(2).setMinWidth(90);
            tblDisciplinas.getColumnModel().getColumn(2).setMaxWidth(90);
            tblDisciplinas.getColumnModel().getColumn(3).setMinWidth(300);
            tblDisciplinas.getColumnModel().getColumn(3).setMaxWidth(500);
            tblDisciplinas.getColumnModel().getColumn(4).setMinWidth(30);
            tblDisciplinas.getColumnModel().getColumn(4).setMaxWidth(50);
            tblDisciplinas.getColumnModel().getColumn(5).setMinWidth(50);
            tblDisciplinas.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        btnCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Altera a Disciplina Cadastrada");
        btnCadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1016, 688));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Método responsável em fazer a alteração da Disciplina no Banco de Dados.
    private void botaoAlterar() {
        //Se não tiver nenhuma linha selecionada 
        if (tblDisciplinas.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para alterar a disciplina!");
        } else {
            try {

                // Valida se os campos obrigatórios foram preenchidos.
                if ((jtfNome.getText().isEmpty()) || jtfCurso.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Favor preencher todos os campos Obrigatórios!");
                } else {

                    String alterar = "update disciplinas set nome=?, cargahoraria=?, curso=?, vagas=?, periodo=? where id=?";

                    pst = conexao.prepareStatement(alterar);

                    pst.setString(1, jtfNome.getText());
                    pst.setString(2, jtfCargaHoraria.getText());
                    pst.setString(3, jtfCurso.getText());
                    pst.setString(4, jtfVagas.getText());
                    pst.setString(5, cboPeriodo.getSelectedItem().toString());
                    pst.setString(6, jtfCodigo.getText());

                    int adicionado = pst.executeUpdate();

                    // A linha abaixo, verifica se alteração foi feita, se sim, ele exibe uma mensagem de confirmação para o usuário.
                    if (adicionado > 0) {
                        JOptionPane.showMessageDialog(null, "Disciplina alterada com sucesso!");
                    }
                    jtfCodigo.setText(null);
                    jtfNome.setText(null);
                    jtfCargaHoraria.setText(null);
                    jtfCurso.setText(null);
                    jtfVagas.setText(null);
                    cboPeriodo.setSelectedItem(null);

                    btnCadastrar.setEnabled(true);
                   
                    // As linhas abaixo Limpa a tabela e preenche novamete com os dados atualizado
                    DefaultTableModel model = (DefaultTableModel) tblDisciplinas.getModel();
                    
                    while(model.getRowCount()>0){
                        model.removeRow(0);
                    }
                    
                    preencheTabela();
                    tblDisciplinas.revalidate();
                    
                }
            } catch (Exception erro) {
                System.out.println(erro);
            }
        }
    }
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // "chamando" o método botaoAltera, para modificar as disciplinas já cadastrada
        botaoAlterar();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void botaosair() {
        
        int sair = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?","ATENÇÃO",JOptionPane.YES_OPTION);
        
        if (sair == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        botaosair();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSairKeyPressed
        if ((evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_ENTER)) {
            botaosair();
        }
    }//GEN-LAST:event_btnSairKeyPressed

    private void botaoExcluir() {

        //Se não tiver nenhuma linha selecionada 
        if (tblDisciplinas.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir a disciplina!");
        } else {

            // a linha abaixo, serve para que o usuário confirme a exclusão dos dados
            int confirma = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a disciplina selecionada?", "Atenção", JOptionPane.YES_OPTION);

            if (confirma == JOptionPane.YES_OPTION) {

                String excluir = "delete from disciplinas where id=?";

                try {

                    pst = conexao.prepareStatement(excluir);
                    pst.setString(1, jtfCodigo.getText());

                    // As linhas abaixo, servem para verificar se os dados foram excluídos no Banco de Dados!
                    int excluido = pst.executeUpdate();
                    if (excluido > 0) {
                        JOptionPane.showMessageDialog(null, "Disciplina excluida com sucesso!");
                    }

                    // as linhas abaixo, limpam os campos do formulário
                    jtfCodigo.setText(null);
                    jtfNome.setText(null);
                    jtfCargaHoraria.setText(null);
                    jtfCurso.setText(null);
                    jtfVagas.setText(null);
                    cboPeriodo.setSelectedItem(null);

                    btnCadastrar.setEnabled(true);
                    
                    // As linhas abaixo Limpa a tabela e preenche novamete com os dados atualizado
                    DefaultTableModel model = (DefaultTableModel) tblDisciplinas.getModel();
                    
                    while(model.getRowCount()>0){
                        model.removeRow(0);
                    }
                    
                    preencheTabela();
                    tblDisciplinas.revalidate();

                } catch (Exception erro) {
                    System.out.println(erro);
                }
            }
        }
    }
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        botaoExcluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblDisciplinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisciplinasMouseClicked

        // variavel que estou utilizando para "pegar o indice da linha na tabela tblDisciplinas
        int indiceLinha = tblDisciplinas.getSelectedRow();

        // assim que o usuário seleciona os dados na tabela tblDisciplinas, o botão cadastrar é desabilitado
        btnCadastrar.setEnabled(false);

        jtfCodigo.setText(tblDisciplinas.getValueAt(indiceLinha, 0).toString());
        jtfNome.setText(tblDisciplinas.getValueAt(indiceLinha, 1).toString());
        jtfCargaHoraria.setText(tblDisciplinas.getValueAt(indiceLinha, 2).toString());
        jtfCurso.setText(tblDisciplinas.getValueAt(indiceLinha, 3).toString());
        jtfVagas.setText(tblDisciplinas.getValueAt(indiceLinha, 4).toString());
        cboPeriodo.setSelectedItem(tblDisciplinas.getValueAt(indiceLinha, 5).toString());

    }//GEN-LAST:event_tblDisciplinasMouseClicked

    private void tblDisciplinasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDisciplinasKeyReleased

        // variavel que estou utilizando para "pegar o indice da linha na tabela tblDisciplinas
        int indiceLinha = tblDisciplinas.getSelectedRow();

        // assim que o usuário seleciona os dados na tabela tblDisciplinas, o botão cadastrar é desabilitado
        btnCadastrar.setEnabled(false);

        // As linhas abaixo, insere os dados da tabela nos Texts Field
        jtfCodigo.setText(tblDisciplinas.getValueAt(indiceLinha, 0).toString());
        jtfNome.setText(tblDisciplinas.getValueAt(indiceLinha, 1).toString());
        jtfCargaHoraria.setText(tblDisciplinas.getValueAt(indiceLinha, 2).toString());
        jtfCurso.setText(tblDisciplinas.getValueAt(indiceLinha, 3).toString());
        jtfVagas.setText(tblDisciplinas.getValueAt(indiceLinha, 4).toString());
        cboPeriodo.setSelectedItem(tblDisciplinas.getValueAt(indiceLinha, 5).toString());
    }//GEN-LAST:event_tblDisciplinasKeyReleased

    // Método responsável pela adição de novas disciplinas ao Bando de Dados
    private void cadastrar() {

        // As linhas abaixo, verificam se os campos obrig´atórios estão preenchidos
        if ((jtfNome.getText().isEmpty()) || jtfCurso.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Favor preencher os campos obrigatórios!");
        } else {
            String insert = "insert into disciplinas (nome, cargahoraria, curso, vagas, periodo) values (?,?,?,?,?)";

            try {
                // As linhas abaixo irá inserir no Banco de Dados o que consta nos jTextField e combobox
                pst = conexao.prepareStatement(insert);

                pst.setString(1, jtfNome.getText());
                pst.setString(2, jtfCargaHoraria.getText());
                pst.setString(3, jtfCurso.getText());
                pst.setString(4, jtfVagas.getText());
                pst.setString(5, cboPeriodo.getSelectedItem().toString());

                // a linha abaixo insere os dados na tabela do Banco de Dados
                // E confirma a inserção de dados na Tabela
                int inserido = pst.executeUpdate();

                if (inserido > 0) {
                    JOptionPane.showMessageDialog(null, "Disciplina cadastrada com sucesso!");

                    // As linhas abaixo, limpam os campos, após a inserção dos dados.
                    jtfNome.setText(null);
                    jtfCargaHoraria.setText(null);
                    jtfCurso.setText(null);
                    jtfVagas.setText(null);
                    cboPeriodo.setSelectedItem(null);
                }
                
                // As linhas abaixo Limpa a tabela e preenche novamete com os dados atualizado
                DefaultTableModel model = (DefaultTableModel) tblDisciplinas.getModel();
                 
                    while(model.getRowCount()>0){
                        model.removeRow(0);
                    }
                    
                preencheTabela();
                tblDisciplinas.revalidate();

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, erro);
            }
        }
    }

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        cadastrar();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Disciplinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Disciplinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Disciplinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Disciplinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Disciplinas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cboPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfCargaHoraria;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfCurso;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfVagas;
    private javax.swing.JLabel lblStatusBD;
    private javax.swing.JTable tblDisciplinas;
    // End of variables declaration//GEN-END:variables
}
